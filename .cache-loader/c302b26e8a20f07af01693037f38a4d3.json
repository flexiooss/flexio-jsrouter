{"remainingRequest":"/mnt/DATA/DEV/JS/flexio-jsrouter/node_modules/babel-loader/lib/index.js??ref--6!/mnt/DATA/DEV/JS/flexio-jsrouter/node_modules/eslint-loader/index.js??ref--5!/mnt/DATA/DEV/JS/flexio-jshelpers/src/nodeHelpers.js","dependencies":[{"path":"/mnt/DATA/DEV/JS/flexio-jshelpers/src/nodeHelpers.js","mtime":1549890670698},{"path":"/mnt/DATA/DEV/JS/flexio-jsrouter/node_modules/cache-loader/dist/cjs.js","mtime":1549958118441},{"path":"/mnt/DATA/DEV/JS/flexio-jsrouter/node_modules/babel-loader/lib/index.js","mtime":1548754057753},{"path":"/mnt/DATA/DEV/JS/flexio-jsrouter/node_modules/eslint-loader/index.js","mtime":1549372049588}],"contextDependencies":[],"result":["import { assert } from './assert';\nimport { isNode } from './is';\n/**\n *\n * @param {Node} node\n * @param {number} [start=0]\n * @param {number} [end=node.childNodes.length]\n * @return {boolean}\n * @throws AssertionError\n */\n\nexport var removeChildNodes = (node, start, end) => {\n  assert(isNode(node), 'removeChildNodes: `node` argument assert be Node');\n  start = start || 0;\n  end = end || node.childNodes.length;\n\n  if (!node.hasChildNodes()) {\n    return false;\n  }\n\n  assert(!!(start <= end), 'removeChildNodes: `welcome` assert be less than `end`');\n\n  while (start < end) {\n    node.removeChild(node.childNodes[start]);\n    end--;\n  }\n};",{"version":3,"sources":["/mnt/DATA/DEV/JS/flexio-jshelpers/src/nodeHelpers.js"],"names":["assert","isNode","removeChildNodes","node","start","end","childNodes","length","hasChildNodes","removeChild"],"mappings":"AAAA,SAAQA,MAAR,QAAqB,UAArB;AACA,SAAQC,MAAR,QAAqB,MAArB;AAEA;;;;;;;;;AAQA,OAAO,IAAMC,gBAAgB,GAAG,CAACC,IAAD,EAAOC,KAAP,EAAcC,GAAd,KAAsB;AACpDL,EAAAA,MAAM,CAACC,MAAM,CAACE,IAAD,CAAP,EACJ,kDADI,CAAN;AAEAC,EAAAA,KAAK,GAAGA,KAAK,IAAI,CAAjB;AACAC,EAAAA,GAAG,GAAGA,GAAG,IAAIF,IAAI,CAACG,UAAL,CAAgBC,MAA7B;;AAEA,MAAI,CAACJ,IAAI,CAACK,aAAL,EAAL,EAA2B;AACzB,WAAO,KAAP;AACD;;AAEDR,EAAAA,MAAM,CAAC,CAAC,EAAEI,KAAK,IAAIC,GAAX,CAAF,EACJ,uDADI,CAAN;;AAGA,SAAOD,KAAK,GAAGC,GAAf,EAAoB;AAClBF,IAAAA,IAAI,CAACM,WAAL,CAAiBN,IAAI,CAACG,UAAL,CAAgBF,KAAhB,CAAjB;AACAC,IAAAA,GAAG;AACJ;AACF,CAjBM","sourcesContent":["import {assert} from './assert'\nimport {isNode} from './is'\n\n/**\n *\n * @param {Node} node\n * @param {number} [start=0]\n * @param {number} [end=node.childNodes.length]\n * @return {boolean}\n * @throws AssertionError\n */\nexport const removeChildNodes = (node, start, end) => {\n  assert(isNode(node),\n    'removeChildNodes: `node` argument assert be Node')\n  start = start || 0\n  end = end || node.childNodes.length\n\n  if (!node.hasChildNodes()) {\n    return false\n  }\n\n  assert(!!(start <= end),\n    'removeChildNodes: `welcome` assert be less than `end`')\n\n  while (start < end) {\n    node.removeChild(node.childNodes[start])\n    end--\n  }\n}\n"]}]}