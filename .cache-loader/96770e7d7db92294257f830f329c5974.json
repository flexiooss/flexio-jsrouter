{"remainingRequest":"/mnt/DATA/DEV/JS/flexio-jsrouter/node_modules/babel-loader/lib/index.js??ref--6!/mnt/DATA/DEV/JS/flexio-jsrouter/node_modules/eslint-loader/index.js??ref--5!/mnt/DATA/DEV/JS/flexio-jshelpers/src/classHelpers.js","dependencies":[{"path":"/mnt/DATA/DEV/JS/flexio-jshelpers/src/classHelpers.js","mtime":1549890670698},{"path":"/mnt/DATA/DEV/JS/flexio-jsrouter/node_modules/cache-loader/dist/cjs.js","mtime":1549958118441},{"path":"/mnt/DATA/DEV/JS/flexio-jsrouter/node_modules/babel-loader/lib/index.js","mtime":1548754057753},{"path":"/mnt/DATA/DEV/JS/flexio-jsrouter/node_modules/eslint-loader/index.js","mtime":1549372049588}],"contextDependencies":[],"result":["/**\n *\n * @param {Object} object\n * @return {string}\n */\nexport var staticClassName = object => object.toString().split('(' || /s+/)[0].split(' ' || /s+/)[1];\n/**\n *\n * @param {Object} object\n * @param {string} name\n * @return {boolean}\n */\n\nexport var hasParentPrototypeName = (object, name) => {\n  var objectPrototype = Object.getPrototypeOf(object);\n\n  while (objectPrototype !== null) {\n    if (objectPrototype.constructor.name === name) {\n      return true;\n    }\n\n    objectPrototype = Object.getPrototypeOf(objectPrototype);\n  }\n\n  return false;\n};",{"version":3,"sources":["/mnt/DATA/DEV/JS/flexio-jshelpers/src/classHelpers.js"],"names":["staticClassName","object","toString","split","hasParentPrototypeName","name","objectPrototype","Object","getPrototypeOf","constructor"],"mappings":"AAAA;;;;;AAKA,OAAO,IAAMA,eAAe,GAAGC,MAAM,IAAIA,MAAM,CAACC,QAAP,GAAkBC,KAAlB,CAAwB,OAAO,IAA/B,EAAqC,CAArC,EAAwCA,KAAxC,CAA8C,OAAO,IAArD,EAA2D,CAA3D,CAAlC;AACP;;;;;;;AAMA,OAAO,IAAMC,sBAAsB,GAAG,CAACH,MAAD,EAASI,IAAT,KAAkB;AACtD,MAAIC,eAAe,GAAGC,MAAM,CAACC,cAAP,CAAsBP,MAAtB,CAAtB;;AACA,SAAOK,eAAe,KAAK,IAA3B,EAAiC;AAC/B,QAAIA,eAAe,CAACG,WAAhB,CAA4BJ,IAA5B,KAAqCA,IAAzC,EAA+C;AAC7C,aAAO,IAAP;AACD;;AACDC,IAAAA,eAAe,GAAGC,MAAM,CAACC,cAAP,CAAsBF,eAAtB,CAAlB;AACD;;AACD,SAAO,KAAP;AACD,CATM","sourcesContent":["/**\n *\n * @param {Object} object\n * @return {string}\n */\nexport const staticClassName = object => object.toString().split('(' || /s+/)[0].split(' ' || /s+/)[1]\n/**\n *\n * @param {Object} object\n * @param {string} name\n * @return {boolean}\n */\nexport const hasParentPrototypeName = (object, name) => {\n  var objectPrototype = Object.getPrototypeOf(object)\n  while (objectPrototype !== null) {\n    if (objectPrototype.constructor.name === name) {\n      return true\n    }\n    objectPrototype = Object.getPrototypeOf(objectPrototype)\n  }\n  return false\n}\n"]}]}