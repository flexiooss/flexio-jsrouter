{"remainingRequest":"/mnt/DATA/DEV/JS/flexio-jsrouter/node_modules/babel-loader/lib/index.js??ref--6!/mnt/DATA/DEV/JS/flexio-jsrouter/node_modules/eslint-loader/index.js??ref--5!/mnt/DATA/DEV/JS/flexio-jshelpers/src/mapExtended/MapOfArray.js","dependencies":[{"path":"/mnt/DATA/DEV/JS/flexio-jshelpers/src/mapExtended/MapOfArray.js","mtime":1520246770140},{"path":"/mnt/DATA/DEV/JS/flexio-jsrouter/node_modules/cache-loader/dist/cjs.js","mtime":1549958118441},{"path":"/mnt/DATA/DEV/JS/flexio-jsrouter/node_modules/babel-loader/lib/index.js","mtime":1548754057753},{"path":"/mnt/DATA/DEV/JS/flexio-jsrouter/node_modules/eslint-loader/index.js","mtime":1549372049588}],"contextDependencies":[],"result":["import { MapExtended } from './MapExtended';\nimport { assert } from '../assert';\n\nclass MapOfArray extends MapExtended {\n  _initValue(key) {\n    this._collection.set(key, []);\n  }\n\n  _constraint(value) {\n    assert(Array.isArray(value), 'hotballoon:MapOfArray:_constraint: `value` argument assert be an instance of Array');\n    return value;\n  }\n\n  _addValue(key, value, keyValue) {\n    var col = this._collection.get(key);\n\n    col.push(value);\n    return col;\n  }\n\n}\n\nexport { MapOfArray };",{"version":3,"sources":["/mnt/DATA/DEV/JS/flexio-jshelpers/src/mapExtended/MapOfArray.js"],"names":["MapExtended","assert","MapOfArray","_initValue","key","_collection","set","_constraint","value","Array","isArray","_addValue","keyValue","col","get","push"],"mappings":"AAAA,SACEA,WADF,QAEO,eAFP;AAGA,SACEC,MADF,QAEO,WAFP;;AAIA,MAAMC,UAAN,SAAyBF,WAAzB,CAAqC;AACnCG,EAAAA,UAAU,CAACC,GAAD,EAAM;AACd,SAAKC,WAAL,CAAiBC,GAAjB,CAAqBF,GAArB,EAA0B,EAA1B;AACD;;AAEDG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjBP,IAAAA,MAAM,CAACQ,KAAK,CAACC,OAAN,CAAcF,KAAd,CAAD,EACJ,oFADI,CAAN;AAEA,WAAOA,KAAP;AACD;;AAEDG,EAAAA,SAAS,CAACP,GAAD,EAAMI,KAAN,EAAaI,QAAb,EAAuB;AAC9B,QAAIC,GAAG,GAAG,KAAKR,WAAL,CAAiBS,GAAjB,CAAqBV,GAArB,CAAV;;AACAS,IAAAA,GAAG,CAACE,IAAJ,CAASP,KAAT;AACA,WAAOK,GAAP;AACD;;AAfkC;;AAiBrC,SACEX,UADF","sourcesContent":["import {\n  MapExtended\n} from './MapExtended'\nimport {\n  assert\n} from '../assert'\n\nclass MapOfArray extends MapExtended {\n  _initValue(key) {\n    this._collection.set(key, [])\n  }\n\n  _constraint(value) {\n    assert(Array.isArray(value),\n      'hotballoon:MapOfArray:_constraint: `value` argument assert be an instance of Array')\n    return value\n  }\n\n  _addValue(key, value, keyValue) {\n    let col = this._collection.get(key)\n    col.push(value)\n    return col\n  }\n}\nexport {\n  MapOfArray\n}\n"]}]}