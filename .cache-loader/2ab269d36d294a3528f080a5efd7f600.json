{"remainingRequest":"/mnt/DATA/DEV/JS/flexio-jsrouter/node_modules/babel-loader/lib/index.js??ref--6!/mnt/DATA/DEV/JS/flexio-jsrouter/node_modules/eslint-loader/index.js??ref--5!/mnt/DATA/DEV/JS/code-altimeter-js/src/Report/TestReport.js","dependencies":[{"path":"/mnt/DATA/DEV/JS/code-altimeter-js/src/Report/TestReport.js","mtime":1549955783687},{"path":"/mnt/DATA/DEV/JS/flexio-jsrouter/node_modules/cache-loader/dist/cjs.js","mtime":1549958118441},{"path":"/mnt/DATA/DEV/JS/flexio-jsrouter/node_modules/babel-loader/lib/index.js","mtime":1548754057753},{"path":"/mnt/DATA/DEV/JS/flexio-jsrouter/node_modules/eslint-loader/index.js","mtime":1549372049588}],"contextDependencies":[],"result":["/**\n * @implements {Report}\n * @type {TestReport}\n */\nclass TestReport {\n  /**\n   *\n   * @param {string} name\n   */\n  constructor(name) {\n    /**\n     *\n     * @type {string}\n     * @private\n     */\n    this.__name = name;\n    /**\n     *\n     * @type {number}\n     */\n\n    this.testFail = 0;\n    /**\n     *\n     * @type {number}\n     */\n\n    this.testPass = 0;\n  }\n  /**\n   *\n   * @return {string}\n   */\n\n\n  get name() {\n    return this.__name;\n  }\n  /**\n   *\n   * @param {number} n\n   * @return {TestReport}\n   */\n\n\n  withTestPass(n) {\n    this.testPass = n;\n    return this;\n  }\n  /**\n   *\n   * @param {number} n\n   * @return {TestReport}\n   */\n\n\n  withTestFail(n) {\n    this.testFail = n;\n    return this;\n  }\n  /**\n   * @override\n   * @return {TestReport}\n   */\n\n\n  logReport() {\n    if (this.failed()) {\n      console.log('\\x1b[41m\\x1b[30m%s\\x1b[0m', ` Test Fail `);\n    } else {\n      console.log('\\x1b[102m\\x1b[30m%s\\x1b[0m', ` Tests Pass `);\n    }\n\n    return this;\n  }\n  /**\n   *\n   * @return {boolean}\n   */\n\n\n  failed() {\n    return this.testFail > 0;\n  }\n\n}\n\nmodule.exports = TestReport;",{"version":3,"sources":["/mnt/DATA/DEV/JS/code-altimeter-js/src/Report/TestReport.js"],"names":["TestReport","constructor","name","__name","testFail","testPass","withTestPass","n","withTestFail","logReport","failed","console","log","module","exports"],"mappings":"AAAA;;;;AAIA,MAAMA,UAAN,CAAiB;AACf;;;;AAIAC,EAAAA,WAAW,CAACC,IAAD,EAAO;AAChB;;;;;AAKA,SAAKC,MAAL,GAAcD,IAAd;AAEA;;;;;AAIA,SAAKE,QAAL,GAAgB,CAAhB;AACA;;;;;AAIA,SAAKC,QAAL,GAAgB,CAAhB;AACD;AAED;;;;;;AAIA,MAAIH,IAAJ,GAAW;AACT,WAAO,KAAKC,MAAZ;AACD;AAED;;;;;;;AAKAG,EAAAA,YAAY,CAACC,CAAD,EAAI;AACd,SAAKF,QAAL,GAAgBE,CAAhB;AACA,WAAO,IAAP;AACD;AAED;;;;;;;AAKAC,EAAAA,YAAY,CAACD,CAAD,EAAI;AACd,SAAKH,QAAL,GAAgBG,CAAhB;AACA,WAAO,IAAP;AACD;AAED;;;;;;AAIAE,EAAAA,SAAS,GAAG;AACV,QAAI,KAAKC,MAAL,EAAJ,EAAmB;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAA0C,aAA1C;AACD,KAFD,MAEO;AACLD,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA2C,cAA3C;AACD;;AACD,WAAO,IAAP;AACD;AAED;;;;;;AAIAF,EAAAA,MAAM,GAAG;AACP,WAAO,KAAKN,QAAL,GAAgB,CAAvB;AACD;;AAxEc;;AA2EjBS,MAAM,CAACC,OAAP,GAAiBd,UAAjB","sourcesContent":["/**\n * @implements {Report}\n * @type {TestReport}\n */\nclass TestReport {\n  /**\n   *\n   * @param {string} name\n   */\n  constructor(name) {\n    /**\n     *\n     * @type {string}\n     * @private\n     */\n    this.__name = name\n\n    /**\n     *\n     * @type {number}\n     */\n    this.testFail = 0\n    /**\n     *\n     * @type {number}\n     */\n    this.testPass = 0\n  }\n\n  /**\n   *\n   * @return {string}\n   */\n  get name() {\n    return this.__name\n  }\n\n  /**\n   *\n   * @param {number} n\n   * @return {TestReport}\n   */\n  withTestPass(n) {\n    this.testPass = n\n    return this\n  }\n\n  /**\n   *\n   * @param {number} n\n   * @return {TestReport}\n   */\n  withTestFail(n) {\n    this.testFail = n\n    return this\n  }\n\n  /**\n   * @override\n   * @return {TestReport}\n   */\n  logReport() {\n    if (this.failed()) {\n      console.log('\\x1b[41m\\x1b[30m%s\\x1b[0m', ` Test Fail `)\n    } else {\n      console.log('\\x1b[102m\\x1b[30m%s\\x1b[0m', ` Tests Pass `)\n    }\n    return this\n  }\n\n  /**\n   *\n   * @return {boolean}\n   */\n  failed() {\n    return this.testFail > 0\n  }\n}\n\nmodule.exports = TestReport\n"]}]}