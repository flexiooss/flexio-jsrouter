{"remainingRequest":"/mnt/DATA/DEV/JS/flexio-jsrouter/node_modules/babel-loader/lib/index.js??ref--6!/mnt/DATA/DEV/JS/flexio-jsrouter/node_modules/eslint-loader/index.js??ref--5!/mnt/DATA/DEV/JS/code-altimeter-js/src/TestExecutor/TestExecutor.js","dependencies":[{"path":"/mnt/DATA/DEV/JS/code-altimeter-js/src/TestExecutor/TestExecutor.js","mtime":1549955651423},{"path":"/mnt/DATA/DEV/JS/flexio-jsrouter/node_modules/cache-loader/dist/cjs.js","mtime":1549958118441},{"path":"/mnt/DATA/DEV/JS/flexio-jsrouter/node_modules/babel-loader/lib/index.js","mtime":1548754057753},{"path":"/mnt/DATA/DEV/JS/flexio-jsrouter/node_modules/eslint-loader/index.js","mtime":1549372049588}],"contextDependencies":[],"result":["var TestReport = require('../Report/TestReport');\n\nvar StaticInvoker = require('./StaticInvoker');\n/**\n * @implements {TestExecutable}\n */\n\n\nclass TestExecutor {\n  /**\n   *\n   * @param {TestCase} testCase\n   * @param {string} testName\n   * @param {TestRun} runner\n   */\n  constructor(testCase, testName, runner) {\n    /**\n     *\n     * @type {TestCase}\n     * @protected\n     */\n    this._testCase = testCase;\n    /**\n     *\n     * @type {string}\n     * @private\n     */\n\n    this.__testName = testName;\n    /**\n     *\n     * @type {TestRun}\n     * @private\n     */\n\n    this.__runner = runner;\n    /**\n     *\n     * @type {TestReport}\n     * @protected\n     */\n\n    this._report = new TestReport(testName);\n  }\n  /**\n   * @return {TestReport}\n   */\n\n\n  exec() {\n    this._execTest();\n\n    return this._report;\n  }\n  /**\n   *\n   * @return {TestReport}\n   * @protected\n   */\n\n\n  _execTest() {\n    var testCase = this.__newTestCase();\n\n    if (this.__runner.isVerbose()) {\n      console.log(`Test  ${this.__testName}`);\n    }\n\n    if (this.__runner.isVerbose()) {\n      console.log('\\x1b[90m%s\\x1b[0m', `------------------------------------\nSetup ${this.__testName} \n`);\n    }\n\n    testCase.setUp();\n\n    try {\n      testCase[this.__testName]();\n\n      this.__logPass(testCase);\n\n      this.__incrementTestPass();\n    } catch (e) {\n      this.__logError(testCase, e);\n\n      this.__incrementTestFail();\n    }\n\n    if (this.__runner.isVerbose()) {\n      console.log('\\x1b[90m%s\\x1b[0m', `------------------------------\ntearDown ${this.__testName} \n`);\n    }\n\n    testCase.tearDown();\n    return this._report;\n  }\n  /**\n   *\n   * @param {TestCase} testCase\n   * @private\n   */\n\n\n  __logPass(testCase) {\n    console.log('\\x1b[92m%s\\x1b[0m', `⛱   PASS ${this.__testName}`);\n  }\n  /**\n   *\n   * @param {TestCase} testCase\n   * @param {Error} error\n   * @private\n   */\n\n\n  __logError(testCase, error) {\n    console.log('\\x1b[31m%s\\x1b[0m', `\n       \n########################################        \n###### ⛑ TEST FAIL      ${testCase.constructor.name}:${this.__testName}\n########################################\n`);\n    console.log(error);\n    console.log('\\x1b[31m%s\\x1b[0m', `\n########################################\n`);\n  }\n  /**\n   *\n   * @return {TestCase}\n   * @private\n   */\n\n\n  __newTestCase() {\n    return new this._testCase();\n  }\n  /**\n   *\n   * @return {TestExecutor}\n   * @private\n   */\n\n\n  __incrementTestPass() {\n    this._report.testPass++;\n    return this;\n  }\n  /**\n   *\n   * @return {TestExecutor}\n   * @private\n   */\n\n\n  __incrementTestFail() {\n    this._report.testFail++;\n    return this;\n  }\n\n}\n\nmodule.exports = TestExecutor;",{"version":3,"sources":["/mnt/DATA/DEV/JS/code-altimeter-js/src/TestExecutor/TestExecutor.js"],"names":["TestReport","require","StaticInvoker","TestExecutor","constructor","testCase","testName","runner","_testCase","__testName","__runner","_report","exec","_execTest","__newTestCase","isVerbose","console","log","setUp","__logPass","__incrementTestPass","e","__logError","__incrementTestFail","tearDown","error","name","testPass","testFail","module","exports"],"mappings":"AAAA,IAAMA,UAAU,GAAGC,OAAO,CAAC,sBAAD,CAA1B;;AACA,IAAMC,aAAa,GAAGD,OAAO,CAAC,iBAAD,CAA7B;AAEA;;;;;AAGA,MAAME,YAAN,CAAmB;AACjB;;;;;;AAMAC,EAAAA,WAAW,CAACC,QAAD,EAAWC,QAAX,EAAqBC,MAArB,EAA6B;AACtC;;;;;AAKA,SAAKC,SAAL,GAAiBH,QAAjB;AACA;;;;;;AAKA,SAAKI,UAAL,GAAkBH,QAAlB;AACA;;;;;;AAKA,SAAKI,QAAL,GAAgBH,MAAhB;AACA;;;;;;AAKA,SAAKI,OAAL,GAAe,IAAIX,UAAJ,CAAeM,QAAf,CAAf;AACD;AAED;;;;;AAGAM,EAAAA,IAAI,GAAG;AACL,SAAKC,SAAL;;AACA,WAAO,KAAKF,OAAZ;AACD;AAED;;;;;;;AAKAE,EAAAA,SAAS,GAAG;AACV,QAAMR,QAAQ,GAAG,KAAKS,aAAL,EAAjB;;AAEA,QAAI,KAAKJ,QAAL,CAAcK,SAAd,EAAJ,EAA+B;AAC7BC,MAAAA,OAAO,CAACC,GAAR,CAAa,SAAQ,KAAKR,UAAW,EAArC;AACD;;AAED,QAAI,KAAKC,QAAL,CAAcK,SAAd,EAAJ,EAA+B;AAC7BC,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAkC;QAChC,KAAKR,UAAW;CADlB;AAGD;;AAEDJ,IAAAA,QAAQ,CAACa,KAAT;;AAEA,QAAI;AACFb,MAAAA,QAAQ,CAAC,KAAKI,UAAN,CAAR;;AAEA,WAAKU,SAAL,CAAed,QAAf;;AACA,WAAKe,mBAAL;AACD,KALD,CAKE,OAAOC,CAAP,EAAU;AACV,WAAKC,UAAL,CAAgBjB,QAAhB,EAA0BgB,CAA1B;;AACA,WAAKE,mBAAL;AACD;;AAED,QAAI,KAAKb,QAAL,CAAcK,SAAd,EAAJ,EAA+B;AAC7BC,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAkC;WAC7B,KAAKR,UAAW;CADrB;AAGD;;AACDJ,IAAAA,QAAQ,CAACmB,QAAT;AACA,WAAO,KAAKb,OAAZ;AACD;AAED;;;;;;;AAKAQ,EAAAA,SAAS,CAACd,QAAD,EAAW;AAClBW,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAkC,YAAW,KAAKR,UAAW,EAA7D;AACD;AAED;;;;;;;;AAMAa,EAAAA,UAAU,CAACjB,QAAD,EAAWoB,KAAX,EAAkB;AAC1BT,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAkC;;;0BAGZZ,QAAQ,CAACD,WAAT,CAAqBsB,IAAK,IAAG,KAAKjB,UAAW;;CAHnE;AAMAO,IAAAA,OAAO,CAACC,GAAR,CAAYQ,KAAZ;AACAT,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAkC;;CAAlC;AAGD;AAED;;;;;;;AAKAH,EAAAA,aAAa,GAAG;AACd,WAAO,IAAI,KAAKN,SAAT,EAAP;AACD;AAED;;;;;;;AAKAY,EAAAA,mBAAmB,GAAG;AACpB,SAAKT,OAAL,CAAagB,QAAb;AACA,WAAO,IAAP;AACD;AAED;;;;;;;AAKAJ,EAAAA,mBAAmB,GAAG;AACpB,SAAKZ,OAAL,CAAaiB,QAAb;AACA,WAAO,IAAP;AACD;;AAxIgB;;AA2InBC,MAAM,CAACC,OAAP,GAAiB3B,YAAjB","sourcesContent":["const TestReport = require('../Report/TestReport')\nconst StaticInvoker = require('./StaticInvoker')\n\n/**\n * @implements {TestExecutable}\n */\nclass TestExecutor {\n  /**\n   *\n   * @param {TestCase} testCase\n   * @param {string} testName\n   * @param {TestRun} runner\n   */\n  constructor(testCase, testName, runner) {\n    /**\n     *\n     * @type {TestCase}\n     * @protected\n     */\n    this._testCase = testCase\n    /**\n     *\n     * @type {string}\n     * @private\n     */\n    this.__testName = testName\n    /**\n     *\n     * @type {TestRun}\n     * @private\n     */\n    this.__runner = runner\n    /**\n     *\n     * @type {TestReport}\n     * @protected\n     */\n    this._report = new TestReport(testName)\n  }\n\n  /**\n   * @return {TestReport}\n   */\n  exec() {\n    this._execTest()\n    return this._report\n  }\n\n  /**\n   *\n   * @return {TestReport}\n   * @protected\n   */\n  _execTest() {\n    const testCase = this.__newTestCase()\n\n    if (this.__runner.isVerbose()) {\n      console.log(`Test  ${this.__testName}`)\n    }\n\n    if (this.__runner.isVerbose()) {\n      console.log('\\x1b[90m%s\\x1b[0m', `------------------------------------\nSetup ${this.__testName} \n`)\n    }\n\n    testCase.setUp()\n\n    try {\n      testCase[this.__testName]()\n\n      this.__logPass(testCase)\n      this.__incrementTestPass()\n    } catch (e) {\n      this.__logError(testCase, e)\n      this.__incrementTestFail()\n    }\n\n    if (this.__runner.isVerbose()) {\n      console.log('\\x1b[90m%s\\x1b[0m', `------------------------------\ntearDown ${this.__testName} \n`)\n    }\n    testCase.tearDown()\n    return this._report\n  }\n\n  /**\n   *\n   * @param {TestCase} testCase\n   * @private\n   */\n  __logPass(testCase) {\n    console.log('\\x1b[92m%s\\x1b[0m', `⛱   PASS ${this.__testName}`)\n  }\n\n  /**\n   *\n   * @param {TestCase} testCase\n   * @param {Error} error\n   * @private\n   */\n  __logError(testCase, error) {\n    console.log('\\x1b[31m%s\\x1b[0m', `\n       \n########################################        \n###### ⛑ TEST FAIL      ${testCase.constructor.name}:${this.__testName}\n########################################\n`)\n    console.log(error)\n    console.log('\\x1b[31m%s\\x1b[0m', `\n########################################\n`)\n  }\n\n  /**\n   *\n   * @return {TestCase}\n   * @private\n   */\n  __newTestCase() {\n    return new this._testCase()\n  }\n\n  /**\n   *\n   * @return {TestExecutor}\n   * @private\n   */\n  __incrementTestPass() {\n    this._report.testPass++\n    return this\n  }\n\n  /**\n   *\n   * @return {TestExecutor}\n   * @private\n   */\n  __incrementTestFail() {\n    this._report.testFail++\n    return this\n  }\n}\n\nmodule.exports = TestExecutor\n"]}]}