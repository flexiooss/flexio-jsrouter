{"remainingRequest":"/mnt/DATA/DEV/JS/flexio-jsrouter/node_modules/babel-loader/lib/index.js??ref--6!/mnt/DATA/DEV/JS/flexio-jsrouter/node_modules/eslint-loader/index.js??ref--5!/mnt/DATA/DEV/JS/flexio-jshelpers/src/mapExtended/MapExtended.js","dependencies":[{"path":"/mnt/DATA/DEV/JS/flexio-jshelpers/src/mapExtended/MapExtended.js","mtime":1529006580075},{"path":"/mnt/DATA/DEV/JS/flexio-jsrouter/node_modules/cache-loader/dist/cjs.js","mtime":1549958118441},{"path":"/mnt/DATA/DEV/JS/flexio-jsrouter/node_modules/babel-loader/lib/index.js","mtime":1548754057753},{"path":"/mnt/DATA/DEV/JS/flexio-jsrouter/node_modules/eslint-loader/index.js","mtime":1549372049588}],"contextDependencies":[],"result":["import { assert } from '../assert';\n\nclass MapExtended {\n  constructor() {\n    this._collection = new Map();\n  }\n\n  init(key) {\n    this._initValue(key);\n  }\n\n  setCollection(collection) {\n    assert(collection instanceof Map, 'hotballoon:ExtendMap:set: `collection` argument assert be an instance of Map');\n    this._collection = collection;\n  }\n\n  set(key, value) {\n    assert(key !== undefined, 'hotballoon:ObjectMap:add: `key` argument assert not be undefined');\n\n    this._collection.set(key, this._constraint(value));\n  }\n\n  add(key, value, keyValue) {\n    assert(key !== undefined, 'hotballoon:ObjectMap:add: `key` argument assert not be undefined');\n\n    if (!this._collection.has(key)) {\n      this._initValue(key);\n    }\n\n    var ret = this._constraint(this._addValue(key, value, keyValue));\n\n    this._collection.set(key, ret);\n\n    return ret;\n  }\n\n  has(key) {\n    return this._collection.has(key);\n  }\n\n  keys() {\n    return this._collection.keys();\n  }\n\n  values() {\n    return this._collection.values();\n  }\n\n  get(key) {\n    return key ? this._collection.get(key) : this._collection;\n  }\n\n  delete(key) {\n    this._collection.delete(key);\n  }\n\n  forEach(callback) {\n    return this._collection.forEach(callback);\n  }\n\n  _constraint(value) {\n    return value;\n  }\n\n  _initValue(key) {\n    this._collection.set(key, null);\n  }\n\n  _addValue(key, value, keyValue) {\n    return value;\n  }\n\n}\n\nexport { MapExtended };",{"version":3,"sources":["/mnt/DATA/DEV/JS/flexio-jshelpers/src/mapExtended/MapExtended.js"],"names":["assert","MapExtended","constructor","_collection","Map","init","key","_initValue","setCollection","collection","set","value","undefined","_constraint","add","keyValue","has","ret","_addValue","keys","values","get","delete","forEach","callback"],"mappings":"AAAA,SACEA,MADF,QAEO,WAFP;;AAIA,MAAMC,WAAN,CAAkB;AAChBC,EAAAA,WAAW,GAAG;AACZ,SAAKC,WAAL,GAAmB,IAAIC,GAAJ,EAAnB;AACD;;AACDC,EAAAA,IAAI,CAACC,GAAD,EAAM;AACR,SAAKC,UAAL,CAAgBD,GAAhB;AACD;;AACDE,EAAAA,aAAa,CAACC,UAAD,EAAa;AACxBT,IAAAA,MAAM,CAACS,UAAU,YAAYL,GAAvB,EACJ,8EADI,CAAN;AAEA,SAAKD,WAAL,GAAmBM,UAAnB;AACD;;AACDC,EAAAA,GAAG,CAACJ,GAAD,EAAMK,KAAN,EAAa;AACdX,IAAAA,MAAM,CAACM,GAAG,KAAKM,SAAT,EACJ,kEADI,CAAN;;AAEA,SAAKT,WAAL,CAAiBO,GAAjB,CAAqBJ,GAArB,EAA0B,KAAKO,WAAL,CAAiBF,KAAjB,CAA1B;AACD;;AACDG,EAAAA,GAAG,CAACR,GAAD,EAAMK,KAAN,EAAaI,QAAb,EAAuB;AACxBf,IAAAA,MAAM,CAACM,GAAG,KAAKM,SAAT,EACJ,kEADI,CAAN;;AAEA,QAAI,CAAC,KAAKT,WAAL,CAAiBa,GAAjB,CAAqBV,GAArB,CAAL,EAAgC;AAC9B,WAAKC,UAAL,CAAgBD,GAAhB;AACD;;AACD,QAAIW,GAAG,GAAG,KAAKJ,WAAL,CAAiB,KAAKK,SAAL,CAAeZ,GAAf,EAAoBK,KAApB,EAA2BI,QAA3B,CAAjB,CAAV;;AACA,SAAKZ,WAAL,CAAiBO,GAAjB,CAAqBJ,GAArB,EAA0BW,GAA1B;;AACA,WAAOA,GAAP;AACD;;AACDD,EAAAA,GAAG,CAACV,GAAD,EAAM;AACP,WAAO,KAAKH,WAAL,CAAiBa,GAAjB,CAAqBV,GAArB,CAAP;AACD;;AACDa,EAAAA,IAAI,GAAG;AACL,WAAO,KAAKhB,WAAL,CAAiBgB,IAAjB,EAAP;AACD;;AACDC,EAAAA,MAAM,GAAG;AACP,WAAO,KAAKjB,WAAL,CAAiBiB,MAAjB,EAAP;AACD;;AACDC,EAAAA,GAAG,CAACf,GAAD,EAAM;AACP,WAAQA,GAAD,GAAQ,KAAKH,WAAL,CAAiBkB,GAAjB,CAAqBf,GAArB,CAAR,GAAoC,KAAKH,WAAhD;AACD;;AACDmB,EAAAA,MAAM,CAAChB,GAAD,EAAM;AACV,SAAKH,WAAL,CAAiBmB,MAAjB,CAAwBhB,GAAxB;AACD;;AACDiB,EAAAA,OAAO,CAACC,QAAD,EAAW;AAChB,WAAO,KAAKrB,WAAL,CAAiBoB,OAAjB,CAAyBC,QAAzB,CAAP;AACD;;AACDX,EAAAA,WAAW,CAACF,KAAD,EAAQ;AACjB,WAAOA,KAAP;AACD;;AACDJ,EAAAA,UAAU,CAACD,GAAD,EAAM;AACd,SAAKH,WAAL,CAAiBO,GAAjB,CAAqBJ,GAArB,EAA0B,IAA1B;AACD;;AACDY,EAAAA,SAAS,CAACZ,GAAD,EAAMK,KAAN,EAAaI,QAAb,EAAuB;AAC9B,WAAOJ,KAAP;AACD;;AArDe;;AAuDlB,SACEV,WADF","sourcesContent":["import {\n  assert\n} from '../assert'\n\nclass MapExtended {\n  constructor() {\n    this._collection = new Map()\n  }\n  init(key) {\n    this._initValue(key)\n  }\n  setCollection(collection) {\n    assert(collection instanceof Map,\n      'hotballoon:ExtendMap:set: `collection` argument assert be an instance of Map')\n    this._collection = collection\n  }\n  set(key, value) {\n    assert(key !== undefined,\n      'hotballoon:ObjectMap:add: `key` argument assert not be undefined')\n    this._collection.set(key, this._constraint(value))\n  }\n  add(key, value, keyValue) {\n    assert(key !== undefined,\n      'hotballoon:ObjectMap:add: `key` argument assert not be undefined')\n    if (!this._collection.has(key)) {\n      this._initValue(key)\n    }\n    let ret = this._constraint(this._addValue(key, value, keyValue))\n    this._collection.set(key, ret)\n    return ret\n  }\n  has(key) {\n    return this._collection.has(key)\n  }\n  keys() {\n    return this._collection.keys()\n  }\n  values() {\n    return this._collection.values()\n  }\n  get(key) {\n    return (key) ? this._collection.get(key) : this._collection\n  }\n  delete(key) {\n    this._collection.delete(key)\n  }\n  forEach(callback) {\n    return this._collection.forEach(callback)\n  }\n  _constraint(value) {\n    return value\n  }\n  _initValue(key) {\n    this._collection.set(key, null)\n  }\n  _addValue(key, value, keyValue) {\n    return value\n  }\n}\nexport {\n  MapExtended\n}\n"]}]}