{"remainingRequest":"/mnt/DATA/DEV/JS/flexio-jsrouter/node_modules/babel-loader/lib/index.js??ref--6!/mnt/DATA/DEV/JS/flexio-jsrouter/node_modules/eslint-loader/index.js??ref--5!/mnt/DATA/DEV/JS/flexio-jshelpers/src/MapHelpers.js","dependencies":[{"path":"/mnt/DATA/DEV/JS/flexio-jshelpers/src/MapHelpers.js","mtime":1547723597458},{"path":"/mnt/DATA/DEV/JS/flexio-jsrouter/node_modules/cache-loader/dist/cjs.js","mtime":1549958118441},{"path":"/mnt/DATA/DEV/JS/flexio-jsrouter/node_modules/babel-loader/lib/index.js","mtime":1548754057753},{"path":"/mnt/DATA/DEV/JS/flexio-jsrouter/node_modules/eslint-loader/index.js","mtime":1549372049588}],"contextDependencies":[],"result":["/**\n *\n * @param {Map} map\n * @param {function(a: {key: *, value: *},b: {key: *, value: *} ){return : boolean }} callback\n * @return {Map}\n */\nexport var sortMap = (map, callback) => {\n  var arrayTemp = [];\n  var mapRet = new Map();\n  map.forEach((v, k) => {\n    arrayTemp.push({\n      key: k,\n      value: v\n    });\n  });\n  arrayTemp.sort((a, b) => {\n    return callback(a, b);\n  });\n\n  for (var _i = 0; _i < arrayTemp.length; _i++) {\n    var v = arrayTemp[_i];\n    mapRet.set(v.key, v.value);\n  }\n\n  return mapRet;\n};",{"version":3,"sources":["/mnt/DATA/DEV/JS/flexio-jshelpers/src/MapHelpers.js"],"names":["sortMap","map","callback","arrayTemp","mapRet","Map","forEach","v","k","push","key","value","sort","a","b","set"],"mappings":"AAAA;;;;;;AAMA,OAAO,IAAMA,OAAO,GAAG,CAACC,GAAD,EAAMC,QAAN,KAAmB;AACxC,MAAMC,SAAS,GAAG,EAAlB;AACA,MAAMC,MAAM,GAAG,IAAIC,GAAJ,EAAf;AAEAJ,EAAAA,GAAG,CAACK,OAAJ,CAAY,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACpBL,IAAAA,SAAS,CAACM,IAAV,CAAe;AAACC,MAAAA,GAAG,EAAEF,CAAN;AAASG,MAAAA,KAAK,EAAEJ;AAAhB,KAAf;AACD,GAFD;AAIAJ,EAAAA,SAAS,CAACS,IAAV,CAAe,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACvB,WAAOZ,QAAQ,CAACW,CAAD,EAAIC,CAAJ,CAAf;AACD,GAFD;;AAIA,wBAAgBX,SAAhB,eAA2B;AAAtB,QAAMI,CAAC,GAAIJ,SAAJ,IAAP;AACHC,IAAAA,MAAM,CAACW,GAAP,CAAWR,CAAC,CAACG,GAAb,EAAkBH,CAAC,CAACI,KAApB;AACD;;AACD,SAAOP,MAAP;AACD,CAhBM","sourcesContent":["/**\n *\n * @param {Map} map\n * @param {function(a: {key: *, value: *},b: {key: *, value: *} ){return : boolean }} callback\n * @return {Map}\n */\nexport const sortMap = (map, callback) => {\n  const arrayTemp = []\n  const mapRet = new Map()\n\n  map.forEach((v, k) => {\n    arrayTemp.push({key: k, value: v})\n  })\n\n  arrayTemp.sort((a, b) => {\n    return callback(a, b)\n  })\n\n  for (const v of arrayTemp) {\n    mapRet.set(v.key, v.value)\n  }\n  return mapRet\n}\n"]}]}