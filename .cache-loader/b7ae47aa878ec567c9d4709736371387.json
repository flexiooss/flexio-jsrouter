{"remainingRequest":"/mnt/DATA/DEV/JS/flexio-jsrouter/node_modules/babel-loader/lib/index.js??ref--6!/mnt/DATA/DEV/JS/flexio-jsrouter/node_modules/eslint-loader/index.js??ref--5!/mnt/DATA/DEV/JS/flexio-jshelpers/src/EventHandler/EventListenerParam.js","dependencies":[{"path":"/mnt/DATA/DEV/JS/flexio-jshelpers/src/EventHandler/EventListenerParam.js","mtime":1549890670698},{"path":"/mnt/DATA/DEV/JS/flexio-jsrouter/node_modules/cache-loader/dist/cjs.js","mtime":1549958118441},{"path":"/mnt/DATA/DEV/JS/flexio-jsrouter/node_modules/babel-loader/lib/index.js","mtime":1548754057753},{"path":"/mnt/DATA/DEV/JS/flexio-jsrouter/node_modules/eslint-loader/index.js","mtime":1549372049588}],"contextDependencies":[],"result":["import { isFunction } from '../is';\nimport { assert } from '../assert';\nimport { deepFreezeSeal } from '../objectHelpers';\nexport class EventListenerParam {\n  /**\n   *\n   * @param {String} event\n   * @param {function(payload<Object>, type<string>)} callback\n   */\n  constructor(event, callback) {\n    assert(!!event, 'EventListenerParam:constructor: ̀`event` property assert be not empty');\n    assert(isFunction(callback), 'EventListenerParam:constructor: ̀`callback` property assert be Callable');\n    /**\n     *\n     * @type {String}\n     */\n\n    this.event = event;\n    /**\n     *\n     * @type {function(payload<Object>, type<string>)}\n     */\n\n    this.callback = callback;\n  }\n  /**\n   *\n   * @param {String} event\n   * @param {function(payload<Object>, type<string>)} callback\n   * @constructor\n   * @readonly {EventListenerParam}\n   */\n\n\n  static create(event, callback) {\n    return deepFreezeSeal(new this(event, callback));\n  }\n\n}",{"version":3,"sources":["/mnt/DATA/DEV/JS/flexio-jshelpers/src/EventHandler/EventListenerParam.js"],"names":["isFunction","assert","deepFreezeSeal","EventListenerParam","constructor","event","callback","create"],"mappings":"AAAA,SAAQA,UAAR,QAAyB,OAAzB;AACA,SAAQC,MAAR,QAAqB,WAArB;AACA,SAAQC,cAAR,QAA6B,kBAA7B;AAEA,OAAO,MAAMC,kBAAN,CAAyB;AAC9B;;;;;AAKAC,EAAAA,WAAW,CAACC,KAAD,EAAQC,QAAR,EAAkB;AAC3BL,IAAAA,MAAM,CAAC,CAAC,CAACI,KAAH,EACJ,uEADI,CAAN;AAGAJ,IAAAA,MAAM,CAACD,UAAU,CAACM,QAAD,CAAX,EACJ,yEADI,CAAN;AAGA;;;;;AAIA,SAAKD,KAAL,GAAaA,KAAb;AACA;;;;;AAIA,SAAKC,QAAL,GAAgBA,QAAhB;AACD;AAED;;;;;;;;;AAOA,SAAOC,MAAP,CAAcF,KAAd,EAAqBC,QAArB,EAA+B;AAC7B,WAAOJ,cAAc,CAAC,IAAI,IAAJ,CAASG,KAAT,EAAgBC,QAAhB,CAAD,CAArB;AACD;;AAlC6B","sourcesContent":["import {isFunction} from '../is'\nimport {assert} from '../assert'\nimport {deepFreezeSeal} from '../objectHelpers'\n\nexport class EventListenerParam {\n  /**\n   *\n   * @param {String} event\n   * @param {function(payload<Object>, type<string>)} callback\n   */\n  constructor(event, callback) {\n    assert(!!event,\n      'EventListenerParam:constructor: ̀`event` property assert be not empty'\n    )\n    assert(isFunction(callback),\n      'EventListenerParam:constructor: ̀`callback` property assert be Callable'\n    )\n    /**\n     *\n     * @type {String}\n     */\n    this.event = event\n    /**\n     *\n     * @type {function(payload<Object>, type<string>)}\n     */\n    this.callback = callback\n  }\n\n  /**\n   *\n   * @param {String} event\n   * @param {function(payload<Object>, type<string>)} callback\n   * @constructor\n   * @readonly {EventListenerParam}\n   */\n  static create(event, callback) {\n    return deepFreezeSeal(new this(event, callback))\n  }\n}\n"]}]}