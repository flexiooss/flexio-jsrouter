{"remainingRequest":"/mnt/DATA/DEV/JS/flexio-jsrouter/node_modules/babel-loader/lib/index.js??ref--6!/mnt/DATA/DEV/JS/flexio-jsrouter/node_modules/eslint-loader/index.js??ref--5!/mnt/DATA/DEV/JS/flexio-jsrouter/src/Route/Route.js","dependencies":[{"path":"/mnt/DATA/DEV/JS/flexio-jsrouter/src/Route/Route.js","mtime":1549612997253},{"path":"/mnt/DATA/DEV/JS/flexio-jsrouter/node_modules/cache-loader/dist/cjs.js","mtime":1549958118441},{"path":"/mnt/DATA/DEV/JS/flexio-jsrouter/node_modules/babel-loader/lib/index.js","mtime":1548754057753},{"path":"/mnt/DATA/DEV/JS/flexio-jsrouter/node_modules/eslint-loader/index.js","mtime":1549372049588}],"contextDependencies":[],"result":["import { isFunction, isString, assert } from 'flexio-jshelpers';\nexport class Route {\n  /**\n   *\n   * @param {string} name\n   * @param {string} urlTemplate : page/{myProperty}/{myOtherProperty}\n   * @param {Function} builder\n   * @param {Function} callback\n   */\n  constructor(name, urlTemplate, builder, callback) {\n    assert(isString(name), 'Route `name` argument should be a string');\n    assert(isString(urlTemplate), 'Route `urlTemplate` argument should be a string');\n    assert(isFunction(builder), 'Route `builder` argument should be a Function');\n    assert(isFunction(callback), 'Route `callback` argument should be a Function');\n    this._name = name;\n    this._urlTemplate = urlTemplate;\n    this._builder = builder;\n    this._callback = callback;\n  }\n  /**\n   *\n   * @return {string}\n   */\n\n\n  get name() {\n    return this._name;\n  }\n  /**\n   *\n   * @return {string}\n   */\n\n\n  get urlTemplate() {\n    return this._urlTemplate;\n  }\n  /**\n   *\n   * @return {Function}\n   */\n\n\n  get builder() {\n    return this._builder;\n  }\n  /**\n   *\n   * @return {Function}\n   */\n\n\n  get callback() {\n    return this._callback;\n  }\n\n}",{"version":3,"sources":["/mnt/DATA/DEV/JS/flexio-jsrouter/src/Route/Route.js"],"names":["isFunction","isString","assert","Route","constructor","name","urlTemplate","builder","callback","_name","_urlTemplate","_builder","_callback"],"mappings":"AAAA,SAAQA,UAAR,EAAoBC,QAApB,EAA8BC,MAA9B,QAA2C,kBAA3C;AAEA,OAAO,MAAMC,KAAN,CAAY;AACjB;;;;;;;AAOAC,EAAAA,WAAW,CAACC,IAAD,EAAOC,WAAP,EAAoBC,OAApB,EAA6BC,QAA7B,EAAuC;AAChDN,IAAAA,MAAM,CACJD,QAAQ,CAACI,IAAD,CADJ,EAEJ,0CAFI,CAAN;AAIAH,IAAAA,MAAM,CACJD,QAAQ,CAACK,WAAD,CADJ,EAEJ,iDAFI,CAAN;AAKAJ,IAAAA,MAAM,CACJF,UAAU,CAACO,OAAD,CADN,EAEJ,+CAFI,CAAN;AAIAL,IAAAA,MAAM,CACJF,UAAU,CAACQ,QAAD,CADN,EAEJ,gDAFI,CAAN;AAIA,SAAKC,KAAL,GAAaJ,IAAb;AACA,SAAKK,YAAL,GAAoBJ,WAApB;AACA,SAAKK,QAAL,GAAgBJ,OAAhB;AACA,SAAKK,SAAL,GAAiBJ,QAAjB;AACD;AAED;;;;;;AAIA,MAAIH,IAAJ,GAAW;AACT,WAAO,KAAKI,KAAZ;AACD;AAED;;;;;;AAIA,MAAIH,WAAJ,GAAkB;AAChB,WAAO,KAAKI,YAAZ;AACD;AAED;;;;;;AAIA,MAAIH,OAAJ,GAAc;AACZ,WAAO,KAAKI,QAAZ;AACD;AAED;;;;;;AAIA,MAAIH,QAAJ,GAAe;AACb,WAAO,KAAKI,SAAZ;AACD;;AA9DgB","sourcesContent":["import {isFunction, isString, assert} from 'flexio-jshelpers'\n\nexport class Route {\n  /**\n   *\n   * @param {string} name\n   * @param {string} urlTemplate : page/{myProperty}/{myOtherProperty}\n   * @param {Function} builder\n   * @param {Function} callback\n   */\n  constructor(name, urlTemplate, builder, callback) {\n    assert(\n      isString(name),\n      'Route `name` argument should be a string'\n    )\n    assert(\n      isString(urlTemplate),\n      'Route `urlTemplate` argument should be a string'\n    )\n\n    assert(\n      isFunction(builder),\n      'Route `builder` argument should be a Function'\n    )\n    assert(\n      isFunction(callback),\n      'Route `callback` argument should be a Function'\n    )\n    this._name = name\n    this._urlTemplate = urlTemplate\n    this._builder = builder\n    this._callback = callback\n  }\n\n  /**\n   *\n   * @return {string}\n   */\n  get name() {\n    return this._name\n  }\n\n  /**\n   *\n   * @return {string}\n   */\n  get urlTemplate() {\n    return this._urlTemplate\n  }\n\n  /**\n   *\n   * @return {Function}\n   */\n  get builder() {\n    return this._builder\n  }\n\n  /**\n   *\n   * @return {Function}\n   */\n  get callback() {\n    return this._callback\n  }\n}\n"]}]}