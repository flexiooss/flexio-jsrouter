{"remainingRequest":"/mnt/DATA/DEV/JS/flexio-jsrouter/node_modules/babel-loader/lib/index.js??ref--6!/mnt/DATA/DEV/JS/flexio-jsrouter/node_modules/eslint-loader/index.js??ref--5!/mnt/DATA/DEV/JS/code-altimeter-js/src/runner/TestRun.js","dependencies":[{"path":"/mnt/DATA/DEV/JS/code-altimeter-js/src/runner/TestRun.js","mtime":1549535699158},{"path":"/mnt/DATA/DEV/JS/flexio-jsrouter/node_modules/cache-loader/dist/cjs.js","mtime":1549958118441},{"path":"/mnt/DATA/DEV/JS/flexio-jsrouter/node_modules/babel-loader/lib/index.js","mtime":1548754057753},{"path":"/mnt/DATA/DEV/JS/flexio-jsrouter/node_modules/eslint-loader/index.js","mtime":1549372049588}],"contextDependencies":[],"result":["var Reporter = require('../Report/Reporter');\n\nvar TestExecutorBuilder = require('../TestExecutor/TestExecutorBuilder');\n\nvar TestRunReport = require('../Report/TestRunReport');\n\nvar ReportContainer = require('../Report/ReportContainer');\n\nclass TestRun {\n  /**\n   *\n   * @param {ReportContainer} reportContainer\n   */\n  constructor(reportContainer) {\n    /**\n     *\n     * @type {Array<{test: HaveTestExecutor,testName: ?string}>}\n     * @private\n     */\n    this.__testable = [];\n    /**\n     *\n     * @type {ReportContainer}\n     * @private\n     */\n\n    this.__reportContainer = reportContainer;\n    /**\n     *\n     * @type {boolean}\n     * @private\n     */\n\n    this.__verbose = false;\n    /**\n     *\n     * @type {Reporter}\n     * @private\n     */\n\n    this.__reporter = new Reporter(this.__reportContainer.testRunReport, this);\n  }\n  /**\n   *\n   * @param {HaveTestExecutor} test\n   * @param {?string} testName\n   * @return {TestRun}\n   */\n\n\n  addTest(test) {\n    var testName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n    this.__testable.push({\n      test: test,\n      testName: testName\n    });\n\n    return this;\n  }\n\n  welcome() {\n    if (this.isVerbose()) {\n      console.log(`\n###########################################################################\n###########################################################################\n\n               _              _ _   _                _            \n              | |            | | | (_)              | |           \n  ___ ___   __| | ___    __ _| | |_ _ _ __ ___   ___| |_ ___ _ __ \n / __/ _ \\\\ / _\\` |/ _ \\\\  / _\\` | | __| | '_ \\` _ \\\\ / _ \\\\ __/ _ \\\\ '__|\n| (_| (_) | (_| |  __/ | (_| | | |_| | | | | | |  __/ ||  __/ |   \n \\\\___\\\\___/ \\\\__,_|\\\\___|  \\\\__,_|_|\\\\__|_|_| |_| |_|\\\\___|\\\\__\\\\___|_|   \n                                                                  \n  by Flexio\n###########################################################################\n`);\n    }\n  }\n  /**\n   *\n   * @return {TestRun}\n   */\n\n\n  start() {\n    this.__testable.forEach(testDescription => {\n      /**\n       *\n       * @type {Report}\n       */\n      this.__addReport(TestExecutorBuilder.build(testDescription, this).exec());\n    });\n\n    return this;\n  }\n  /**\n   *\n   * @param {Report} report\n   * @private\n   * @return {TestRun}\n   */\n\n\n  __addReport(report) {\n    this.__reportContainer.addReport(report);\n\n    return this;\n  }\n  /**\n   *\n   * @param {boolean} v\n   * @return {TestRun}\n   */\n\n\n  withVerbose(v) {\n    this.__verbose = v;\n    return this;\n  }\n  /**\n   *\n   * @return {boolean}\n   */\n\n\n  isVerbose() {\n    return this.__verbose === true;\n  }\n  /**\n   *\n   * @param {ReportContainer} reportContainer\n   * @return {TestRun}\n   */\n\n\n  withReportContainer(reportContainer) {\n    this.__reportContainer = reportContainer;\n    return this;\n  }\n  /**\n   *\n   * @return {?Reporter}\n   */\n\n\n  get reportContainer() {\n    return this.__reportContainer;\n  }\n  /**\n   *\n   * @return {TestRun}\n   */\n\n\n  showReport() {\n    this.__reportContainer.buildTestRunReport();\n\n    this.__reporter.show();\n\n    return this;\n  }\n  /**\n   * @throws {TestError}\n   * @return {TestRun}\n   */\n\n\n  throw() {\n    this.__reporter.throw();\n\n    return this;\n  }\n\n}\n\nvar instance = new TestRun(new ReportContainer(new TestRunReport(new Date().toString())));\nmodule.exports = instance;",{"version":3,"sources":["/mnt/DATA/DEV/JS/code-altimeter-js/src/runner/TestRun.js"],"names":["Reporter","require","TestExecutorBuilder","TestRunReport","ReportContainer","TestRun","constructor","reportContainer","__testable","__reportContainer","__verbose","__reporter","testRunReport","addTest","test","testName","push","welcome","isVerbose","console","log","start","forEach","testDescription","__addReport","build","exec","report","addReport","withVerbose","v","withReportContainer","showReport","buildTestRunReport","show","throw","instance","Date","toString","module","exports"],"mappings":"AAAA,IAAMA,QAAQ,GAAGC,OAAO,CAAC,oBAAD,CAAxB;;AACA,IAAMC,mBAAmB,GAAGD,OAAO,CAAC,qCAAD,CAAnC;;AACA,IAAME,aAAa,GAAGF,OAAO,CAAC,yBAAD,CAA7B;;AACA,IAAMG,eAAe,GAAGH,OAAO,CAAC,2BAAD,CAA/B;;AAEA,MAAMI,OAAN,CAAc;AACZ;;;;AAIAC,EAAAA,WAAW,CAACC,eAAD,EAAkB;AAC3B;;;;;AAKA,SAAKC,UAAL,GAAkB,EAAlB;AACA;;;;;;AAKA,SAAKC,iBAAL,GAAyBF,eAAzB;AACA;;;;;;AAKA,SAAKG,SAAL,GAAiB,KAAjB;AACA;;;;;;AAKA,SAAKC,UAAL,GAAkB,IAAIX,QAAJ,CAAa,KAAKS,iBAAL,CAAuBG,aAApC,EAAmD,IAAnD,CAAlB;AACD;AAED;;;;;;;;AAMAC,EAAAA,OAAO,CAACC,IAAD,EAAwB;AAAA,QAAjBC,QAAiB,uEAAN,IAAM;;AAC7B,SAAKP,UAAL,CAAgBQ,IAAhB,CAAqB;AAACF,MAAAA,IAAI,EAAEA,IAAP;AAAaC,MAAAA,QAAQ,EAAEA;AAAvB,KAArB;;AACA,WAAO,IAAP;AACD;;AAEDE,EAAAA,OAAO,GAAG;AACR,QAAI,KAAKC,SAAL,EAAJ,EAAsB;AACpBC,MAAAA,OAAO,CAACC,GAAR,CAAa;;;;;;;;;;;;;CAAb;AAcD;AACF;AAED;;;;;;AAIAC,EAAAA,KAAK,GAAG;AACN,SAAKb,UAAL,CAAgBc,OAAhB,CAAyBC,eAAD,IAAqB;AAC3C;;;;AAIA,WAAKC,WAAL,CACEtB,mBAAmB,CAChBuB,KADH,CACSF,eADT,EAC0B,IAD1B,EAEGG,IAFH,EADF;AAKD,KAVD;;AAWA,WAAO,IAAP;AACD;AAED;;;;;;;;AAMAF,EAAAA,WAAW,CAACG,MAAD,EAAS;AAClB,SAAKlB,iBAAL,CAAuBmB,SAAvB,CAAiCD,MAAjC;;AACA,WAAO,IAAP;AACD;AAED;;;;;;;AAKAE,EAAAA,WAAW,CAACC,CAAD,EAAI;AACb,SAAKpB,SAAL,GAAiBoB,CAAjB;AACA,WAAO,IAAP;AACD;AAED;;;;;;AAIAZ,EAAAA,SAAS,GAAG;AACV,WAAO,KAAKR,SAAL,KAAmB,IAA1B;AACD;AAED;;;;;;;AAKAqB,EAAAA,mBAAmB,CAACxB,eAAD,EAAkB;AACnC,SAAKE,iBAAL,GAAyBF,eAAzB;AACA,WAAO,IAAP;AACD;AAED;;;;;;AAIA,MAAIA,eAAJ,GAAsB;AACpB,WAAO,KAAKE,iBAAZ;AACD;AAED;;;;;;AAIAuB,EAAAA,UAAU,GAAG;AACX,SAAKvB,iBAAL,CAAuBwB,kBAAvB;;AACA,SACGtB,UADH,CAEGuB,IAFH;;AAGA,WAAO,IAAP;AACD;AAED;;;;;;AAIAC,EAAAA,KAAK,GAAG;AACN,SACGxB,UADH,CAEGwB,KAFH;;AAGA,WAAO,IAAP;AACD;;AArJW;;AAwJd,IAAMC,QAAQ,GAAG,IAAI/B,OAAJ,CACf,IAAID,eAAJ,CACE,IAAID,aAAJ,CACE,IAAIkC,IAAJ,GAAWC,QAAX,EADF,CADF,CADe,CAAjB;AAQAC,MAAM,CAACC,OAAP,GAAiBJ,QAAjB","sourcesContent":["const Reporter = require('../Report/Reporter')\nconst TestExecutorBuilder = require('../TestExecutor/TestExecutorBuilder')\nconst TestRunReport = require('../Report/TestRunReport')\nconst ReportContainer = require('../Report/ReportContainer')\n\nclass TestRun {\n  /**\n   *\n   * @param {ReportContainer} reportContainer\n   */\n  constructor(reportContainer) {\n    /**\n     *\n     * @type {Array<{test: HaveTestExecutor,testName: ?string}>}\n     * @private\n     */\n    this.__testable = []\n    /**\n     *\n     * @type {ReportContainer}\n     * @private\n     */\n    this.__reportContainer = reportContainer\n    /**\n     *\n     * @type {boolean}\n     * @private\n     */\n    this.__verbose = false\n    /**\n     *\n     * @type {Reporter}\n     * @private\n     */\n    this.__reporter = new Reporter(this.__reportContainer.testRunReport, this)\n  }\n\n  /**\n   *\n   * @param {HaveTestExecutor} test\n   * @param {?string} testName\n   * @return {TestRun}\n   */\n  addTest(test, testName = null) {\n    this.__testable.push({test: test, testName: testName})\n    return this\n  }\n\n  welcome() {\n    if (this.isVerbose()) {\n      console.log(`\n###########################################################################\n###########################################################################\n\n               _              _ _   _                _            \n              | |            | | | (_)              | |           \n  ___ ___   __| | ___    __ _| | |_ _ _ __ ___   ___| |_ ___ _ __ \n / __/ _ \\\\ / _\\` |/ _ \\\\  / _\\` | | __| | '_ \\` _ \\\\ / _ \\\\ __/ _ \\\\ '__|\n| (_| (_) | (_| |  __/ | (_| | | |_| | | | | | |  __/ ||  __/ |   \n \\\\___\\\\___/ \\\\__,_|\\\\___|  \\\\__,_|_|\\\\__|_|_| |_| |_|\\\\___|\\\\__\\\\___|_|   \n                                                                  \n  by Flexio\n###########################################################################\n`)\n    }\n  }\n\n  /**\n   *\n   * @return {TestRun}\n   */\n  start() {\n    this.__testable.forEach((testDescription) => {\n      /**\n       *\n       * @type {Report}\n       */\n      this.__addReport(\n        TestExecutorBuilder\n          .build(testDescription, this)\n          .exec()\n      )\n    })\n    return this\n  }\n\n  /**\n   *\n   * @param {Report} report\n   * @private\n   * @return {TestRun}\n   */\n  __addReport(report) {\n    this.__reportContainer.addReport(report)\n    return this\n  }\n\n  /**\n   *\n   * @param {boolean} v\n   * @return {TestRun}\n   */\n  withVerbose(v) {\n    this.__verbose = v\n    return this\n  }\n\n  /**\n   *\n   * @return {boolean}\n   */\n  isVerbose() {\n    return this.__verbose === true\n  }\n\n  /**\n   *\n   * @param {ReportContainer} reportContainer\n   * @return {TestRun}\n   */\n  withReportContainer(reportContainer) {\n    this.__reportContainer = reportContainer\n    return this\n  }\n\n  /**\n   *\n   * @return {?Reporter}\n   */\n  get reportContainer() {\n    return this.__reportContainer\n  }\n\n  /**\n   *\n   * @return {TestRun}\n   */\n  showReport() {\n    this.__reportContainer.buildTestRunReport()\n    this\n      .__reporter\n      .show()\n    return this\n  }\n\n  /**\n   * @throws {TestError}\n   * @return {TestRun}\n   */\n  throw() {\n    this\n      .__reporter\n      .throw()\n    return this\n  }\n}\n\nconst instance = new TestRun(\n  new ReportContainer(\n    new TestRunReport(\n      new Date().toString()\n    )\n  )\n)\n\nmodule.exports = instance\n"]}]}