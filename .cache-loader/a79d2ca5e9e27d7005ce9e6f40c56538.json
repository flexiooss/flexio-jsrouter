{"remainingRequest":"/mnt/DATA/DEV/JS/flexio-jsrouter/node_modules/babel-loader/lib/index.js??ref--6!/mnt/DATA/DEV/JS/flexio-jsrouter/node_modules/eslint-loader/index.js??ref--5!/mnt/DATA/DEV/JS/flexio-jsrouter/src/Router.js","dependencies":[{"path":"/mnt/DATA/DEV/JS/flexio-jsrouter/src/Router.js","mtime":1549895948149},{"path":"/mnt/DATA/DEV/JS/flexio-jsrouter/node_modules/cache-loader/dist/cjs.js","mtime":1549958118441},{"path":"/mnt/DATA/DEV/JS/flexio-jsrouter/node_modules/babel-loader/lib/index.js","mtime":1548754057753},{"path":"/mnt/DATA/DEV/JS/flexio-jsrouter/node_modules/eslint-loader/index.js","mtime":1549372049588}],"contextDependencies":[],"result":["import { RouteHandler } from './Route/RouteHandler';\nimport { UrlParser } from './UrlParser';\nimport { PublicRouteHandler } from './Route/PublicRouteHandler';\nimport { RouteWithParams } from './Route/RouteWithParams';\nimport { HashParser } from './HashParser';\nimport { QueryParser } from './QueryParser';\nimport { RouteNotFoundException } from '../RouteNotFoundException';\nimport { Route } from './Route/Route';\n/**\n *\n * @class Router\n *\n */\n\nexport class Router {\n  /**\n   *\n   * @param {RouteHandlerInterface} routesHandler\n   */\n  constructor(routesHandler) {\n    this._routesHandler = routesHandler;\n    /**\n     *\n     * @type {?BrowserLocation}\n     * @private\n     */\n\n    this._browserLocation = null;\n    this._PathParser = UrlParser; // this._HashParser = HashParser\n    // this._QueryParser = QueryParser\n  }\n  /**\n   *\n   * @param {Route} route\n   * @return {Router}\n   */\n\n\n  addRoute(route) {\n    this._routesHandler.addRoute(route);\n\n    return this;\n  }\n  /**\n   *\n   * @param {string} name\n   * @return {Router}\n   */\n\n\n  removeRoute(name) {\n    this._routesHandler.removeRoute(name);\n\n    return this;\n  }\n  /**\n   *\n   * @param {BrowserLocation} browserLocation\n   * @return {Router}\n   */\n\n\n  withBrowserLocation(browserLocation) {\n    this._browserLocation = browserLocation;\n    return this;\n  }\n  /**\n   *\n   * @param key\n   * @return {Route}\n   */\n\n\n  route(key) {\n    return this._routesHandler.route(key);\n  }\n  /**\n   *\n   * @param {string} name\n   * @param {Object} routeParameters\n   * @param {?PartialUrl} partialUrl\n   * @return {URL}\n   */\n\n\n  urlByName(name, routeParameters, partialUrl) {\n    return this._routesHandler.urlByName(name, routeParameters, partialUrl);\n  }\n  /**\n   *\n   * @param {string} url\n   * @return {RouteWithParams}\n   * @throws {RouteNotFoundException}\n   */\n\n\n  routeByUrl(url) {\n    return this._routesHandler.routeByUrl(url);\n  }\n\n}",{"version":3,"sources":["/mnt/DATA/DEV/JS/flexio-jsrouter/src/Router.js"],"names":["RouteHandler","UrlParser","PublicRouteHandler","RouteWithParams","HashParser","QueryParser","RouteNotFoundException","Route","Router","constructor","routesHandler","_routesHandler","_browserLocation","_PathParser","addRoute","route","removeRoute","name","withBrowserLocation","browserLocation","key","urlByName","routeParameters","partialUrl","routeByUrl","url"],"mappings":"AAAA,SAAQA,YAAR,QAA2B,sBAA3B;AACA,SAAQC,SAAR,QAAwB,aAAxB;AACA,SAAQC,kBAAR,QAAiC,4BAAjC;AACA,SAAQC,eAAR,QAA8B,yBAA9B;AACA,SACEC,UADF,QAEO,cAFP;AAGA,SACEC,WADF,QAEO,eAFP;AAGA,SAAQC,sBAAR,QAAqC,2BAArC;AACA,SAAQC,KAAR,QAAoB,eAApB;AAEA;;;;;;AAKA,OAAO,MAAMC,MAAN,CAAa;AAClB;;;;AAIAC,EAAAA,WAAW,CAACC,aAAD,EAAgB;AACzB,SAAKC,cAAL,GAAsBD,aAAtB;AACA;;;;;;AAKA,SAAKE,gBAAL,GAAwB,IAAxB;AACA,SAAKC,WAAL,GAAmBZ,SAAnB,CARyB,CASzB;AACA;AACD;AAED;;;;;;;AAKAa,EAAAA,QAAQ,CAACC,KAAD,EAAQ;AACd,SAAKJ,cAAL,CAAoBG,QAApB,CAA6BC,KAA7B;;AACA,WAAO,IAAP;AACD;AAED;;;;;;;AAKAC,EAAAA,WAAW,CAACC,IAAD,EAAO;AAChB,SAAKN,cAAL,CAAoBK,WAApB,CAAgCC,IAAhC;;AACA,WAAO,IAAP;AACD;AAED;;;;;;;AAKAC,EAAAA,mBAAmB,CAACC,eAAD,EAAkB;AACnC,SAAKP,gBAAL,GAAwBO,eAAxB;AACA,WAAO,IAAP;AACD;AAED;;;;;;;AAKAJ,EAAAA,KAAK,CAACK,GAAD,EAAM;AACT,WAAO,KAAKT,cAAL,CAAoBI,KAApB,CAA0BK,GAA1B,CAAP;AACD;AAED;;;;;;;;;AAOAC,EAAAA,SAAS,CAACJ,IAAD,EAAOK,eAAP,EAAwBC,UAAxB,EAAoC;AAC3C,WAAO,KAAKZ,cAAL,CAAoBU,SAApB,CAA8BJ,IAA9B,EAAoCK,eAApC,EAAqDC,UAArD,CAAP;AACD;AAED;;;;;;;;AAMAC,EAAAA,UAAU,CAACC,GAAD,EAAM;AACd,WAAO,KAAKd,cAAL,CAAoBa,UAApB,CAA+BC,GAA/B,CAAP;AACD;;AA5EiB","sourcesContent":["import {RouteHandler} from './Route/RouteHandler'\nimport {UrlParser} from './UrlParser'\nimport {PublicRouteHandler} from './Route/PublicRouteHandler'\nimport {RouteWithParams} from './Route/RouteWithParams'\nimport {\n  HashParser\n} from './HashParser'\nimport {\n  QueryParser\n} from './QueryParser'\nimport {RouteNotFoundException} from '../RouteNotFoundException'\nimport {Route} from './Route/Route'\n\n/**\n *\n * @class Router\n *\n */\nexport class Router {\n  /**\n   *\n   * @param {RouteHandlerInterface} routesHandler\n   */\n  constructor(routesHandler) {\n    this._routesHandler = routesHandler\n    /**\n     *\n     * @type {?BrowserLocation}\n     * @private\n     */\n    this._browserLocation = null\n    this._PathParser = UrlParser\n    // this._HashParser = HashParser\n    // this._QueryParser = QueryParser\n  }\n\n  /**\n   *\n   * @param {Route} route\n   * @return {Router}\n   */\n  addRoute(route) {\n    this._routesHandler.addRoute(route)\n    return this\n  }\n\n  /**\n   *\n   * @param {string} name\n   * @return {Router}\n   */\n  removeRoute(name) {\n    this._routesHandler.removeRoute(name)\n    return this\n  }\n\n  /**\n   *\n   * @param {BrowserLocation} browserLocation\n   * @return {Router}\n   */\n  withBrowserLocation(browserLocation) {\n    this._browserLocation = browserLocation\n    return this\n  }\n\n  /**\n   *\n   * @param key\n   * @return {Route}\n   */\n  route(key) {\n    return this._routesHandler.route(key)\n  }\n\n  /**\n   *\n   * @param {string} name\n   * @param {Object} routeParameters\n   * @param {?PartialUrl} partialUrl\n   * @return {URL}\n   */\n  urlByName(name, routeParameters, partialUrl) {\n    return this._routesHandler.urlByName(name, routeParameters, partialUrl)\n  }\n\n  /**\n   *\n   * @param {string} url\n   * @return {RouteWithParams}\n   * @throws {RouteNotFoundException}\n   */\n  routeByUrl(url) {\n    return this._routesHandler.routeByUrl(url)\n  }\n}\n"]}]}