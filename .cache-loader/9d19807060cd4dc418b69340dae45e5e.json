{"remainingRequest":"/mnt/DATA/DEV/JS/flexio-jsrouter/node_modules/babel-loader/lib/index.js??ref--6!/mnt/DATA/DEV/JS/flexio-jsrouter/node_modules/eslint-loader/index.js??ref--5!/mnt/DATA/DEV/JS/flexio-jshelpers/src/LogHandler.js","dependencies":[{"path":"/mnt/DATA/DEV/JS/flexio-jshelpers/src/LogHandler.js","mtime":1549890670698},{"path":"/mnt/DATA/DEV/JS/flexio-jsrouter/node_modules/cache-loader/dist/cjs.js","mtime":1549958118441},{"path":"/mnt/DATA/DEV/JS/flexio-jsrouter/node_modules/babel-loader/lib/index.js","mtime":1548754057753},{"path":"/mnt/DATA/DEV/JS/flexio-jsrouter/node_modules/eslint-loader/index.js","mtime":1549372049588}],"contextDependencies":[],"result":["'use strict';\n\nimport { isBoolean } from './is';\nimport { assert } from './assert';\nvar COLORS = {\n  black: '#261E1A',\n  blueDark: '#133046',\n  blue: '#15959F',\n  sand: '#F1E4B3',\n  sandDark: '#EC9770',\n  redDark: '#CC1714',\n  red: '#FF4420',\n  redLight: '#C7402D',\n  greenDark: '#00261C',\n  green: '#167F39',\n  greenLight: '#45BF55',\n  magentaDark: '#660F27',\n  magenta: '#B30838',\n  pink: '#FF8C94',\n  yellow: '#DED120',\n  orange: '#F46E03',\n  orangeLight: '#FC902D'\n};\n\nclass LogHandler {\n  constructor() {\n    var prefix = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    var color = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'black';\n    this._prefix = prefix;\n    /**\n     *\n     * @type {boolean}\n     * @private\n     */\n\n    this._debug = typeof window.__DEBUG__ !== 'undefined';\n    /**\n     *\n     * @type {string}\n     * @private\n     */\n\n    this._color = COLORS[color] || '#000';\n    /**\n     *\n     * @type {Set<any>}\n     * @private\n     */\n\n    this._logs = new Set();\n    this._color = color;\n  }\n  /**\n   *\n   * @param {string} value\n   */\n\n\n  set color(value) {\n    this._color = COLORS[value] || '#000';\n  }\n  /**\n   *\n   * @param {boolean} value\n   */\n\n\n  debugable() {\n    var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    assert(isBoolean(value), 'hotballoon:LogHandler:construct: `_debug` argument assert be Boolean');\n    this._debug = value;\n  }\n  /**\n   *\n   * @param {string} text\n   * @return {LogHandler}\n   */\n\n\n  log(text) {\n    var log = new LogText(this._prefix + ' : ' + text).color(this._color);\n\n    this._logs.add(log);\n\n    return log;\n  }\n  /**\n   *\n   * @param {Node} node\n   * @return {LogNode}\n   */\n\n\n  node(node) {\n    var log = new LogNode(node).color(this._color);\n\n    this._logs.add(log);\n\n    return log;\n  }\n\n  object(object) {\n    var log = new LogObject(object).color(this._color);\n\n    this._logs.add(log);\n\n    return log;\n  }\n  /**\n   * Print log into console\n   */\n\n\n  print() {\n    if (this._debug) {\n      if (this._logs.size > 1) {\n        var i = 0;\n        var collapsed = false;\n\n        this._logs.forEach(v => {\n          if (v instanceof LogText && i === 0) {\n            console.groupCollapsed(v.content, v.styles());\n            collapsed = true;\n          }\n\n          if (v instanceof LogText && i !== 0) {\n            console.log(v.content, v.styles());\n          }\n\n          if (v instanceof LogNode) {\n            console.log(v.content, v.styles());\n          }\n\n          if (v instanceof LogObject) {\n            console.dir(v.content, v.styles());\n          }\n\n          i++;\n        });\n\n        if (collapsed) {\n          console.groupEnd();\n        }\n      } else {\n        this._logs.forEach(v => {\n          if (v instanceof LogText) {\n            console.log(v.content, v.styles());\n          }\n\n          if (v instanceof LogNode) {\n            console.log(v.content, v.styles());\n          }\n\n          if (v instanceof LogObject) {\n            console.dir(v.content, v.styles());\n          }\n        });\n      }\n    }\n\n    this._logs.clear();\n  }\n\n}\n\nexport { LogHandler };\nvar FONT_SIZE = 12;\n\nclass Log {\n  constructor() {\n    this._content = null;\n    this._color = '';\n    this._background = false;\n    this._size = 1;\n  }\n  /**\n   *\n   * @return {?*}\n   */\n\n\n  get content() {\n    return this._content;\n  }\n  /**\n   *\n   * @return {string}\n   */\n\n\n  styles() {\n    var styles = this._background ? 'background-color: ' + this._color + '; color: #fff;' : 'color: ' + this._color + ';';\n    styles += 'font-size: ' + (this._size * 1.5 + FONT_SIZE) + 'px;';\n    return styles;\n  }\n\n  background() {\n    var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    this._background = value;\n    return this;\n  }\n  /**\n   *\n   * @param {string} value\n   */\n\n\n  color(value) {\n    this._color = value;\n    return this;\n  }\n  /**\n   *\n   * @param {number} value\n   */\n\n\n  size() {\n    var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    this._size = value;\n    return this;\n  }\n\n}\n\nclass LogText extends Log {\n  /**\n   *\n   * @param {string} text\n   */\n  constructor(text) {\n    super();\n    this._content = '%c ' + text;\n  }\n\n}\n\nclass LogObject extends Log {\n  /**\n   *\n   * @param {Object} object\n   */\n  constructor(object) {\n    super();\n    this._content = object;\n  }\n\n}\n\nclass LogNode extends Log {\n  /**\n   *\n   * @param {Node} node\n   */\n  constructor(node) {\n    super();\n    this._content = node;\n  }\n\n}",{"version":3,"sources":["/mnt/DATA/DEV/JS/flexio-jshelpers/src/LogHandler.js"],"names":["isBoolean","assert","COLORS","black","blueDark","blue","sand","sandDark","redDark","red","redLight","greenDark","green","greenLight","magentaDark","magenta","pink","yellow","orange","orangeLight","LogHandler","constructor","prefix","color","_prefix","_debug","window","__DEBUG__","_color","_logs","Set","value","debugable","log","text","LogText","add","node","LogNode","object","LogObject","print","size","i","collapsed","forEach","v","console","groupCollapsed","content","styles","dir","groupEnd","clear","FONT_SIZE","Log","_content","_background","_size","background"],"mappings":"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","sourcesContent":["'use strict'\nimport {isBoolean} from './is'\nimport {assert} from './assert'\n\nconst COLORS = {\n  black: '#261E1A',\n  blueDark: '#133046',\n  blue: '#15959F',\n  sand: '#F1E4B3',\n  sandDark: '#EC9770',\n  redDark: '#CC1714',\n  red: '#FF4420',\n  redLight: '#C7402D',\n  greenDark: '#00261C',\n  green: '#167F39',\n  greenLight: '#45BF55',\n  magentaDark: '#660F27',\n  magenta: '#B30838',\n  pink: '#FF8C94',\n  yellow: '#DED120',\n  orange: '#F46E03',\n  orangeLight: '#FC902D'\n}\n\nclass LogHandler {\n  constructor(prefix = '', color = 'black') {\n    this._prefix = prefix\n    /**\n     *\n     * @type {boolean}\n     * @private\n     */\n    this._debug = typeof window.__DEBUG__ !== 'undefined'\n    /**\n     *\n     * @type {string}\n     * @private\n     */\n    this._color = COLORS[color] || '#000'\n    /**\n     *\n     * @type {Set<any>}\n     * @private\n     */\n    this._logs = new Set()\n    this._color = color\n  }\n\n  /**\n   *\n   * @param {string} value\n   */\n  set color(value) {\n    this._color = COLORS[value] || '#000'\n  }\n\n  /**\n   *\n   * @param {boolean} value\n   */\n  debugable(value = true) {\n    assert(isBoolean(value),\n      'hotballoon:LogHandler:construct: `_debug` argument assert be Boolean')\n    this._debug = value\n  }\n\n  /**\n   *\n   * @param {string} text\n   * @return {LogHandler}\n   */\n  log(text) {\n    let log = new LogText(this._prefix + ' : ' + text).color(this._color)\n    this._logs.add(log)\n    return log\n  }\n\n  /**\n   *\n   * @param {Node} node\n   * @return {LogNode}\n   */\n  node(node) {\n    let log = new LogNode(node).color(this._color)\n    this._logs.add(log)\n    return log\n  }\n\n  object(object) {\n    let log = new LogObject(object).color(this._color)\n    this._logs.add(log)\n    return log\n  }\n\n  /**\n   * Print log into console\n   */\n  print() {\n    if (this._debug) {\n      if (this._logs.size > 1) {\n        var i = 0\n        var collapsed = false\n        this._logs.forEach((v) => {\n          if (v instanceof LogText && i === 0) {\n            console.groupCollapsed(v.content, v.styles())\n            collapsed = true\n          }\n          if (v instanceof LogText && i !== 0) {\n            console.log(v.content, v.styles())\n          }\n          if (v instanceof LogNode) {\n            console.log(v.content, v.styles())\n          }\n          if (v instanceof LogObject) {\n            console.dir(v.content, v.styles())\n          }\n          i++\n        })\n\n        if (collapsed) {\n          console.groupEnd()\n        }\n      } else {\n        this._logs.forEach((v) => {\n          if (v instanceof LogText) {\n            console.log(v.content, v.styles())\n          }\n          if (v instanceof LogNode) {\n            console.log(v.content, v.styles())\n          }\n          if (v instanceof LogObject) {\n            console.dir(v.content, v.styles())\n          }\n        })\n      }\n    }\n    this._logs.clear()\n  }\n}\n\nexport {LogHandler}\n\nconst FONT_SIZE = 12\n\nclass Log {\n  constructor() {\n    this._content = null\n    this._color = ''\n    this._background = false\n    this._size = 1\n  }\n\n  /**\n   *\n   * @return {?*}\n   */\n  get content() {\n    return this._content\n  }\n\n  /**\n   *\n   * @return {string}\n   */\n  styles() {\n    let styles = (this._background) ? 'background-color: ' + this._color + '; color: #fff;' : 'color: ' + this._color + ';'\n    styles += 'font-size: ' + ((this._size * 1.5) + FONT_SIZE) + 'px;'\n    return styles\n  }\n\n  background(value = true) {\n    this._background = value\n    return this\n  }\n\n  /**\n   *\n   * @param {string} value\n   */\n  color(value) {\n    this._color = value\n    return this\n  }\n\n  /**\n   *\n   * @param {number} value\n   */\n  size(value = 1) {\n    this._size = value\n    return this\n  }\n}\n\nclass LogText extends Log {\n  /**\n   *\n   * @param {string} text\n   */\n  constructor(text) {\n    super()\n    this._content = '%c ' + text\n  }\n}\n\nclass LogObject extends Log {\n  /**\n   *\n   * @param {Object} object\n   */\n  constructor(object) {\n    super()\n    this._content = object\n  }\n}\n\nclass LogNode extends Log {\n  /**\n   *\n   * @param {Node} node\n   */\n  constructor(node) {\n    super()\n    this._content = node\n  }\n}\n"]}]}